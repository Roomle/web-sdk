import Environment from './environment';
import { BakedShadowParams, Pixotron } from '../../../typings/pixotron';
export declare const DEFAULT_BAKED_SHADOW_PARAMS: {
    enable: boolean;
    shadowMapResolution: number;
    smoothTransition: boolean;
    numSamples: number;
    numSamplesPerFrame: number;
    bShadowMaterial: boolean;
    falloff: number;
    darkness: number;
    size: number;
    lightSolidAngle: number;
    yPosition: number;
};
export default class BakedShadowEnvironment extends Environment {
    protected _pixotron: Pixotron;
    protected _shadowPlane: THREE.Mesh;
    private _pixotronGuard;
    private _wasAAEnabled;
    private _shadowBaker;
    private _renderer;
    private _camera;
    private _params;
    private _loadedCallback;
    private _sceneChildren;
    constructor(scene: THREE.Scene, oldEnvironment?: Environment);
    private _progressCallback;
    needsBounds(): boolean;
    needsCamera(): boolean;
    needsRotation(): boolean;
    setPixotron(pixotron: Pixotron, renderer: THREE.WebGLRenderer, camera: THREE.Camera, params?: BakedShadowParams): Promise<void>;
    private _addGroundShadows;
    setLoadedCallback(callback: () => void): void;
    updateBounds(bounds: THREE.Vector3, force?: boolean): boolean;
    private _getNumberOfChildren;
    addToScene(): void;
    removeFromScene(): void;
    showGUI(): void;
}
