import Component from '@glimmer/component';
import I18n from '../../../services/i18n';
export default class ActionbarX extends Component {
    private _embed;
    private _uiCore;
    private _loadingScreen;
    private _coreEventHandler;
    private _scriptLoader;
    protected _i18n: I18n;
    private _localStorage;
    private _isOpeningAr;
    private _isSaving;
    private _hiddenButtons;
    state: {
        isFullscreen: boolean;
        isHd: boolean;
        isMultiselect: boolean;
        isMeasurementVisible: boolean;
        showAr: boolean;
        showFullscreen: boolean;
        showHd: boolean;
        showMultiselect: boolean;
        showSave: boolean;
        showLoad: boolean;
        showResetCamera: boolean;
        showShare: boolean;
        showInfo: boolean;
        isLegacy: boolean;
        showToast: boolean;
        toastHeading: string;
        toastMsg: string;
        indicateSave: boolean;
        showMeasurements: boolean;
    };
    readonly showTagChanger: boolean;
    readonly hasSavedConfigurations: boolean;
    readonly numSavedFormatted: any;
    private _fullscreenChangeBind;
    private _fullscreenChangeFromOutsideBind;
    constructor(object: object);
    willDestroy(): void;
    didInsertElement(): void;
    private _fullscreenChange;
    private _fullscreenChangeFromOutside;
    private _onSelectionCancel;
    private _onConfigurationHasChildren;
    private _onDimensionVisibilityChanged;
    toggleFullscreen(): void;
    resetCamera(): void;
    toggleHd(): void;
    toggleMeasurements(): void;
    toggleMultiselect(): void;
    onSave(): void;
    onLoad(): void;
    onOpenTag(): void;
    onCloseToast(): void;
    openAr(): void;
    openInfo(conversationId?: number): void;
    private _openAr;
    onHover(): void;
    onHoverOut(): void;
    openShare(): void;
    private _loadRoomleButton;
}
