import PlanObjectViewModel from './plan-object-view-model';
import KernelViewModel from './kernel-view-model';
import { Plan } from '../../../typings/planner';
import { Component, KernelVector3 } from '../../../typings/kernel';
import { ConfiguratorKernelCallbackI } from '../services/planner-kernel-access';
import PlannerSceneEventHandler from '../webgl/planner-scene-event-handler';
export default class PlanViewModel extends KernelViewModel implements ConfiguratorKernelCallbackI {
    private _planObjectViewModels;
    private _components;
    private _componentFactory;
    private _plannerKernelAccess;
    private _plannerMeshGenerator;
    private _plannerSceneEventHandler;
    constructor(plan: Plan);
    clearReference(): void;
    getCorePlan(): Plan;
    addPlanObjectViewModel(planObjectViewModel: PlanObjectViewModel): void;
    private _addComponent;
    private _addMeshToComponentId;
    private _updateComponentInformation;
    private _getPlanObjectViewModelForRuntimeId;
    Editor3dComponentCreated(id: number, position: KernelVector3, eulerAngles: KernelVector3, parentObjectRuntimeId: number, isRootComponent: boolean): void;
    Editor3dAddBakedMesh(runtimeComponentId: number, materialId: string, vertices: Int32Array, indices: Int32Array, uvCoords: Float32Array, normals: Float32Array): void;
    Editor3dAddNamedMesh(runtimeComponentId: number, meshId: string, materialId: string, transform: Float32Array, vertices: Int32Array, indices: Int32Array, uvCoords: Float32Array, normals: Float32Array): void;
    updateComponentMetaInformation(component: Component): void;
    setPlannerSceneEventHandler(plannerSceneEventHandler: PlannerSceneEventHandler): void;
    Editor3dComponentDocked(componentId: number, parentId: number, componentPosition: KernelVector3, componentRotation: KernelVector3): void;
    Editor3dBeginConstruction(componentId: number): void;
    Editor3dGeometryNotReady(id: number): void;
    sceneCleared(): void;
    componentDeleted(componentId: number): void;
}
