import UnitFormatter from '../services/unit-formatter';
import { KernelCube } from '../../../typings/kernel';
export default class DimensioningHelper {
    private _camera;
    private _lineBounds;
    private _textUpdated;
    private _font;
    private _formatter;
    private _onLoaded;
    private _onChange;
    private _dimensions;
    private _lineMaterial;
    private _planeMaterial;
    private _widthLine;
    private _heightLine;
    private _depthLine;
    private _textMaterial;
    private _widthText;
    private _widthTextGeometry;
    private _heightText;
    private _heightTextGeometry;
    private _depthText;
    private _depthTextGeometry;
    private _widthPlane;
    private _heightPlane;
    private _depthPlane;
    forceDimensions: boolean;
    private _hoverOnTime;
    private _delayDuration;
    private _dimensionsVisible;
    constructor(camera: THREE.PerspectiveCamera, formatter: UnitFormatter);
    private _loaded;
    private _performUpdate;
    private _updateWidth;
    private _updateHeight;
    private _updateDepth;
    updateBounds(boxForMeasurements: KernelCube): void;
    update(force?: boolean): void;
    addToScene(scene: THREE.Scene, uiScene: THREE.Scene): void;
    private _getWidthEdge;
    private _getDepthEdge;
    private _getHeightEdge;
    private _getZSign;
    private _getXSign;
    onLoaded(handler: () => void): void;
    onDimensionsVisibilityChanged(handler: (visible: boolean) => void): void;
    onHover(touch?: boolean): void;
    disableDimensions(): void;
    areDimensionsEnabled(): boolean;
    private _visibilityChangedCallback;
    clear(): void;
}
