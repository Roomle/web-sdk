!function(){const e=40;class t{constructor(){this._queue=[],this._pendingRequests=0}_nextSlot(){if(this._pendingRequests-=1,!this._queue.length)return;const{request:e,resolve:t,reject:s}=this._queue.shift();this._fetch(e).then(t,s)}_fetch(e){return this._pendingRequests+=1,new Promise((t,s)=>{self.fetch(e).then(function(){this._nextSlot(),t(...arguments)}.bind(this),e=>{this._nextSlot(),s(e)})})}fetch(t){return this._pendingRequests<e?this._fetch(t):new Promise((e,s)=>this._queue.push({request:t,resolve:e,reject:s}))}}class s{constructor(e){this._networkLayer=e}loadAsset(e){return this._networkLayer.fetch(e).then(e=>e.blob()).then(e=>new Promise(t=>t(URL.createObjectURL(e)))).catch(e=>new Promise((t,s)=>s(e)))}}let n;const r=function(e,t,s){self.postMessage(JSON.stringify(["rml."+e,t,s]))};self.addEventListener("message",function(e){if(!e||!e.data)return;const[i,h,c]=JSON.parse(e.data);if(!i||0!==i.indexOf("rml"))return;const[o,u]=i.split(".");switch(parseInt(u,10)){case 1:n=new s(new t),r(4,h,[]);break;case 5:if(!n)return;n.loadAsset(c).then(e=>{r(3,h,[e])},e=>r(2,h,{message:e.message}))}},!1)}();
//# sourceMappingURL=asset-loader.js.map
