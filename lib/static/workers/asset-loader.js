if(!self.define){const e=async e=>{if(!s[e]&&(await new Promise(async t=>{if("document"in self){const s=document.createElement("script");s.src=e,s.defer=!0,document.head.appendChild(s),s.onload=t}else importScripts(e),t()}),!s[e]))throw new Error(`Module ${e} didnâ€™t register its module`);return s[e]},t=async(t,s)=>{const n=await Promise.all(t.map(e));s(1===n.length?n[0]:n)},s={require:Promise.resolve(t)};self.define=((t,n,i)=>{s[t]||(s[t]=new Promise(async t=>{let s={};const r=await Promise.all(n.map(t=>"exports"===t?s:e(t)));s.default=i(...r),t(s)}))})}define("./asset-loader.js",["./chunk-7ecde8df.js"],function(e){const t=40;class s{constructor(){this._queue=[],this._pendingRequests=0}_nextSlot(){if(this._pendingRequests-=1,!this._queue.length)return;const{request:e,resolve:t,reject:s}=this._queue.shift();this._fetch(e).then(t,s)}_fetch(e){return this._pendingRequests+=1,new Promise((t,s)=>{self.fetch(e).then(function(){this._nextSlot(),t(...arguments)}.bind(this),e=>{this._nextSlot(),s(e)})})}fetch(e){return this._pendingRequests>=t?new Promise((t,s)=>this._queue.push({request:e,resolve:t,reject:s})):this._fetch(e)}}class n{constructor(e){this._networkLayer=e}loadAsset(e){return this._networkLayer.fetch(e).then(e=>e.blob()).then(e=>new Promise(t=>t(URL.createObjectURL(e)))).catch(e=>new Promise((t,s)=>s(e)))}}new class{constructor(){this._communicationInterface=new e.WorkerToMainThread(this)}onCommand(e,t,i){switch(e){case 1:this._loader=new n(new s),this._communicationInterface.sendToMainThread(4,t,[]);break;case 5:if(!this._loader)return;this._loader.loadAsset(i).then(e=>{this._communicationInterface.sendToMainThread(3,t,[e])},e=>this._communicationInterface.sendToMainThread(2,t,{message:e.message}))}}}});
//# sourceMappingURL=asset-loader.js.map
