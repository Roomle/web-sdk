import{H as PREVIEW_MATERIAL_COLOR,O as PREVIEW_MATERIAL_OPACITY,I as PREVIEW_MATERIAL_ROUGHNESS,P as LightSetting,t as getGUI}from"./chunk-9072424d.js";import{g as MeshGenerator}from"./chunk-c0f35840.js";class ConfiguratorMeshGenerator extends MeshGenerator{constructor(){super(...arguments),this._configuratorPreviewMaterial=new THREE.MeshStandardMaterial({color:PREVIEW_MATERIAL_COLOR,transparent:!0,opacity:PREVIEW_MATERIAL_OPACITY,roughness:PREVIEW_MATERIAL_ROUGHNESS})}generateMesh(t=null,e,i,a,s,o,h=!1){let r;r=h?this._generateGeometry(t,i,a,s,o).clone():this._generateGeometry(t,i,a,s,o);const n=new THREE.Mesh(r,this._configuratorPreviewMaterial.clone());return n.layers.set(3),e&&this.waitingForMaterials.push(this._assignMaterial(n,e).then(()=>{this._materialLoaded&&this._materialLoaded()})),n}setMaterial(t,e,i){this._assignMaterial(t,e).then(()=>{this._materialLoaded&&this._materialLoaded()})}loadMaterial(t,e,i){return super._loadMaterial(t,e,i)}loadTextures(t,e,i,a){return super._loadTextures(t,e,i,a)}}class HdLightSetting extends LightSetting{constructor(t,e){super(t,e),this._params={ambientLight:{color:"#ffffff"},areaLight:{intensity:50,color:"#ffffff"},sideSpot:{color:"#ffffff",angle:50},backSpot:{color:"#ffffff",angle:50}},this._ambientLight=new THREE.AmbientLight(new THREE.Color(this._params.ambientLight.color),.5),this._ambientLight.layers.set(1),this._sideSpot=this._createSpotlight(new THREE.Vector3(2,3,1.5),new THREE.Vector3(0,.1,0),new THREE.Color(this._params.sideSpot.color),this._params.sideSpot.angle,.5,.5),this._backspot=this._createSpotlight(new THREE.Vector3(3,3,-3),new THREE.Vector3(0,.1,0),new THREE.Color(this._params.backSpot.color),this._params.backSpot.angle,1,.5),this._areaLight=new THREE.RectAreaLight(new THREE.Color(this._params.areaLight.color),void 0,1,1),this._areaLight.castShadow=!0,this._areaLight.matrixAutoUpdate=!0,this._areaLight.intensity=this._params.areaLight.intensity/(this._areaLight.width*this._areaLight.height),this._areaLight.position.set(-3,4,4),this._areaLight.lookAt(new THREE.Vector3(0,0,0)),this._areaLight.visible=!0,this._areaLight.layers.set(1),this.addToScene()}_createSpotlight(t,e,i,a,s,o){let h=new THREE.SpotLight(i,o);return h.angle=a*Math.PI/180,h.penumbra=s,h.position.copy(t),h.target.position.set(e.x,e.y,e.z),h.shadow.camera.near=.1,h.shadow.camera.far=10,h.visible=!0,h.castShadow=!1,h}addToScene(){this._scene.add(this._ambientLight),this._scene.add(this._areaLight),this._scene.add(this._sideSpot),this._scene.add(this._backspot)}removeFromScene(){this._scene.remove(this._ambientLight),this._scene.remove(this._areaLight),this._scene.remove(this._sideSpot),this._scene.remove(this._backspot)}reload(){this.removeFromScene(),this.addToScene()}showGUI(){let t=getGUI();if(this._areaLight){let e=t.addFolder("Area Light");e.add(this._areaLight,"visible"),e.add(this._params.areaLight,"intensity").min(10).max(400).step(10).onChange(t=>{this._areaLight.intensity=t/(this._areaLight.width*this._areaLight.height)}),e.add(this._areaLight,"castShadow"),e.addColor(this._params.areaLight,"color").onChange(t=>{this._areaLight.color=new THREE.Color(t)}),e.add(this._areaLight.position,"x").min(-10).max(10).step(.1).onChange(()=>{this._areaLight.lookAt(new THREE.Vector3(0,0,0))}),e.add(this._areaLight.position,"y").min(-10).max(10).step(.1).onChange(()=>{this._areaLight.lookAt(new THREE.Vector3(0,0,0))}),e.add(this._areaLight.position,"z").min(-10).max(10).step(.1).onChange(()=>{this._areaLight.lookAt(new THREE.Vector3(0,0,0))})}if(this._ambientLight){let e=t.addFolder("Ambient Light");e.add(this._ambientLight,"visible"),e.add(this._ambientLight,"intensity").min(0).max(5).step(.1),e.addColor(this._params.ambientLight,"color").onChange(t=>{this._ambientLight.color=new THREE.Color(t)})}if(this._sideSpot){let e=t.addFolder("Side Spot");e.add(this._sideSpot,"visible"),e.add(this._sideSpot,"intensity").min(0).max(5).step(.1),e.add(this._sideSpot,"penumbra").min(0).max(1).step(.1),e.addColor(this._params.sideSpot,"color").onChange(t=>{this._sideSpot.color=new THREE.Color(t)}),e.add(this._params.sideSpot,"angle").min(10).max(180).step(1).onChange(t=>{this._sideSpot.angle=t*Math.PI/180}),e.add(this._sideSpot.position,"x").min(-10).max(10).step(.1).onChange(()=>{this._sideSpot.lookAt(new THREE.Vector3(0,0,0))}),e.add(this._sideSpot.position,"y").min(-10).max(10).step(.1).onChange(()=>{this._sideSpot.lookAt(new THREE.Vector3(0,0,0))}),e.add(this._sideSpot.position,"z").min(-10).max(10).step(.1).onChange(()=>{this._sideSpot.lookAt(new THREE.Vector3(0,0,0))})}if(this._backspot){let e=t.addFolder("Back Spot");e.add(this._backspot,"visible"),e.add(this._backspot,"intensity").min(0).max(5).step(.1),e.add(this._backspot,"penumbra").min(0).max(1).step(.1),e.addColor(this._params.backSpot,"color").onChange(t=>{this._backspot.color=new THREE.Color(t)}),e.add(this._params.backSpot,"angle").min(10).max(180).step(1).onChange(t=>{this._backspot.angle=t*Math.PI/180}),e.add(this._backspot.position,"x").min(-10).max(10).step(.1).onChange(()=>{this._backspot.lookAt(new THREE.Vector3(0,0,0))}),e.add(this._backspot.position,"y").min(-10).max(10).step(.1).onChange(()=>{this._backspot.lookAt(new THREE.Vector3(0,0,0))}),e.add(this._backspot.position,"z").min(-10).max(10).step(.1).onChange(()=>{this._backspot.lookAt(new THREE.Vector3(0,0,0))})}}}export{HdLightSetting as a,ConfiguratorMeshGenerator as b};
//# sourceMappingURL=chunk-d7fa19e0.js.map
