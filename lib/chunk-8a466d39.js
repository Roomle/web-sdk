import{J as PREVIEW_MATERIAL_COLOR,Q as PREVIEW_MATERIAL_OPACITY,K as PREVIEW_MATERIAL_ROUGHNESS}from"./chunk-7cea0edd.js";import{h as MeshGenerator}from"./chunk-06cabbae.js";class ConfiguratorMeshGenerator extends MeshGenerator{constructor(){super(...arguments),this._geometryComponentMaterialCache=new Map,this._configuratorPreviewMaterial=new THREE.MeshStandardMaterial({color:PREVIEW_MATERIAL_COLOR,transparent:!0,opacity:PREVIEW_MATERIAL_OPACITY,roughness:PREVIEW_MATERIAL_ROUGHNESS})}generateMesh(e=0,t=null,a,r,s,o,i,n=!1){let h;h=n?this._generateGeometry(t,r,s,o,i).clone():this._generateGeometry(t,r,s,o,i);const _=this._createMesh(e,t,h);return _.layers.set(3),a&&this.waitingForMaterials.push(this._assignMaterial(_,a).then(()=>{e&&t&&this._geometryComponentMaterialCache.set(this._getComponentMeshId(e,t),a),this._materialLoaded&&this._materialLoaded()})),_}_createMesh(e,t,a){if(e&&t){const r=this._getComponentMeshId(e,t);if(this._geometryComponentMaterialCache.has(r)){const e=this._geometryComponentMaterialCache.get(r);if(this._cacheHolder.materialCache.has(e)){const t=this._cacheHolder.materialCache.get(e);return new THREE.Mesh(a,t)}}}return new THREE.Mesh(a,this._configuratorPreviewMaterial.clone())}_getComponentMeshId(e,t){return e+"_"+t}setMaterial(e,t,a){this._assignMaterial(e,t).then(()=>{this._materialLoaded&&this._materialLoaded()})}loadMaterial(e,t,a){return super._loadMaterial(e,t,a)}loadTextures(e,t,a,r){return super._loadTextures(e,t,a,r)}}export{ConfiguratorMeshGenerator as a};
//# sourceMappingURL=chunk-8a466d39.js.map
