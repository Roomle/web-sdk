import{b as setCursor,c as getColors}from"./chunk-7ea16e93.js";import{P as LightSetting,t as getGUI,g as EventDispatcher,Q as convertToTHREE,R as convertToThreeDimensions,S as fadeIn,w as dispose,T as getBoundingBoxMaterial,H as PREVIEW_MATERIAL_COLOR,U as getColorFromInt,O as PREVIEW_MATERIAL_OPACITY,V as getSelectionGeometry,W as checkGLB,m as CANVAS_ID,k as CameraControl3D,p as toRadiant,X as setWallTransparencyBasedOnCamera,i as kernelBoxToThreeBox,a as Benchmark,Y as setWallTransparency,Z as ConfiguratorViewModel,F as RoomleDependencyInjection,N as disposeMesh,h as InputManager,x as DependencyInjectionAssignment,z as ScriptLoader,B as DomHelper,y as Logger,E as Main}from"./chunk-77b53560.js";import{a as __decorate,b as inject}from"./chunk-0434d6fb.js";import{b as Env,c as MESH_DEFAULT_FORMAT,g as MeshGenerator,d as UiCallback,e as RapiAccess}from"./chunk-d46d2c45.js";import{b as RaycastHelper,a as CommonKernelAccess}from"./chunk-974f6e80.js";import{a as SceneManager,b as CameraControl2D,c as CameraControlFirstPerson}from"./chunk-a6304a7c.js";class PlannerLightSetting extends LightSetting{constructor(e,t){super(e,t),this._center=new THREE.Vector3(0,0,0),this._params={ambientLight:{color:"#ffffff"},mainDirLight:{position:{x:-1,y:12,z:1},color:"#ffffff"},secondDirLight:{position:{x:3,y:12,z:-3},color:"#f0faff"}},this._ambientLight=new THREE.AmbientLight(new THREE.Color(this._params.ambientLight.color),.8),this._ambientLight.layers.set(1),this._mainDirLight=new THREE.DirectionalLight(new THREE.Color(this._params.mainDirLight.color),.2),this._mainDirLight.position.set(this._params.mainDirLight.position.x,this._params.mainDirLight.position.y,this._params.mainDirLight.position.z),this._mainDirLight.castShadow=!0,this._mainDirLight.shadow.camera.near=.5,this._mainDirLight.shadow.camera.far=100,this._mainDirLight.shadow.mapSize=new THREE.Vector2(1024,1024),this._mainDirLight.visible=!0,this._secondDirLight=new THREE.DirectionalLight(new THREE.Color(this._params.secondDirLight.color),.2),this._secondDirLight.position.set(this._params.secondDirLight.position.x,this._params.secondDirLight.position.y,this._params.secondDirLight.position.z),this._secondDirLight.castShadow=!1,this._secondDirLight.shadow.camera.near=.5,this._secondDirLight.shadow.camera.far=100,this._secondDirLight.shadow.mapSize=new THREE.Vector2(1024,1024),this._secondDirLight.visible=!1,this.addToScene()}updateSunPosition(e,t){}addToScene(){this._scene.add(this._mainDirLight),this._scene.add(this._secondDirLight),this._scene.add(this._ambientLight)}removeFromScene(){this._scene.remove(this._mainDirLight),this._scene.remove(this._secondDirLight),this._scene.remove(this._ambientLight)}reload(){this.removeFromScene(),this.addToScene()}needsBounds(){return!0}updateBounds(e){this._center.copy(e.getCenter(new THREE.Vector3)),this._mainDirLight.position.copy(new THREE.Vector3(this._params.mainDirLight.position.x,this._params.mainDirLight.position.y,this._params.mainDirLight.position.z).add(this._center)),this._secondDirLight.position.copy(new THREE.Vector3(this._params.secondDirLight.position.x,this._params.secondDirLight.position.y,this._params.secondDirLight.position.z).add(this._center)),this._mainDirLight.lookAt(this._center),this._secondDirLight.lookAt(this._center);const t=e.getSize(new THREE.Vector3),n=(Math.max(Math.max(t.x,t.y),t.z)+10)/2;this._mainDirLight.shadow.camera.top=this._center.z+n,this._mainDirLight.shadow.camera.bottom=this._center.z-n,this._mainDirLight.shadow.camera.left=this._center.x-n,this._mainDirLight.shadow.camera.right=this._center.x+n,this._mainDirLight.shadow.camera.updateProjectionMatrix(),this._secondDirLight.shadow.camera.top=this._center.z+n,this._secondDirLight.shadow.camera.bottom=this._center.z-n,this._secondDirLight.shadow.camera.left=this._center.x-n,this._secondDirLight.shadow.camera.right=this._center.x+n,this._secondDirLight.shadow.camera.updateProjectionMatrix()}showGUI(){let e=getGUI();if(this._ambientLight){let t=e.addFolder("Ambient Light");t.add(this._ambientLight,"visible"),t.add(this._ambientLight,"intensity").min(0).max(5).step(.1),t.addColor(this._params.ambientLight,"color").onChange(e=>this._ambientLight.color=new THREE.Color(e))}if(this._mainDirLight){let t=e.addFolder("Main Directional Light");t.add(this._mainDirLight,"visible"),t.add(this._mainDirLight,"intensity").min(0).max(10).step(.1),t.add(this._mainDirLight,"castShadow"),t.addColor(this._params.mainDirLight,"color").onChange(e=>this._mainDirLight.color=new THREE.Color(e)),t.add(this._mainDirLight.position,"x").min(-10).max(10).step(.1).onChange(()=>this._mainDirLight.lookAt(this._center)),t.add(this._mainDirLight.position,"y").min(-10).max(50).step(.1).onChange(()=>this._mainDirLight.lookAt(this._center)),t.add(this._mainDirLight.position,"z").min(-10).max(10).step(.1).onChange(()=>this._mainDirLight.lookAt(this._center))}if(this._secondDirLight){let t=e.addFolder("Second Directional Light");t.add(this._secondDirLight,"visible"),t.add(this._secondDirLight,"intensity").min(0).max(10).step(.1),t.add(this._secondDirLight,"castShadow"),t.addColor(this._params.secondDirLight,"color").onChange(e=>this._secondDirLight.color=new THREE.Color(e)),t.add(this._secondDirLight.position,"x").min(-10).max(10).step(.1).onChange(()=>this._secondDirLight.lookAt(this._center)),t.add(this._secondDirLight.position,"y").min(-10).max(50).step(.1).onChange(()=>this._secondDirLight.lookAt(this._center)),t.add(this._secondDirLight.position,"z").min(-10).max(10).step(.1).onChange(()=>this._secondDirLight.lookAt(this._center))}}}class SceneEventInfo{constructor(e){const{planObjectViewModel:t,resetCamera:n}=e;this.planObjectViewModel=t,this.resetCamera=void 0===n||n}}class PlannerSceneEventHandler extends EventDispatcher{constructor(e,t,n){super(),this._debug=!1,this._raycastHelper=new RaycastHelper(e,t,n,0),this._raycastHelper.addEventListener(3,()=>{this._plannerSelectionHandler.cancelSelection()},this),this._plannerSelectionHandler.addEventListener(0,({planObjectViewModel:e})=>{this.dispatchEvent(0,new SceneEventInfo({planObjectViewModel:e}))},this),this._plannerSelectionHandler.addEventListener(1,({planObjectViewModel:e})=>{this.dispatchEvent(1,new SceneEventInfo({planObjectViewModel:e}))},this)}addPlanObjectHandlers(e){this._addPlanObjectHandlers(e,e.getBoundingBox(),{hasListener:!0,priority:1,roomleId:e.getId()})}addWallHandlers(e){this._addWallHandlers(e,{hasListener:!0,priority:1,roomleId:e.id})}_addPlanObjectHandlers(e,t,n){t.userData.hasListener||(t.userData=n,t.addEventListener("select",()=>this._clickComponent(e)),t.addEventListener("hover_on",()=>this._hoverOn(e)),t.addEventListener("hover_off",()=>this._hoverOff(e)))}_addWallHandlers(e,t){e.userData.hasListener||(e.userData=t,e.addEventListener("select",()=>{}),e.addEventListener("hover_on",()=>{}),e.addEventListener("hover_off",()=>{}))}_clickComponent(e){this._debug&&e.getId(),this._plannerSelectionHandler.check(e),this._setCursor()}_hoverOn(e){this._hoveredObject=e,this._setCursor()}_hoverOff(e){this._hoveredObject=null,this._setCursor()}_setCursor(){this._draggedObject?setCursor("grabbing"):this._hoveredObject?setCursor("pointer"):this._draggedObject||this._hoveredObject||setCursor("default")}setCamera(e){this._raycastHelper.setCamera(e)}setScene(e){this._raycastHelper.setScene(e)}getSelectedIds(){return this._plannerSelectionHandler.getSelectedIds()}setSelectionMode(e){this._plannerSelectionHandler.setSelectionMode(e)}setPlanViewModel(e){}}__decorate([inject],PlannerSceneEventHandler.prototype,"_plannerSelectionHandler",void 0);class KernelViewModel{constructor(e){this._coreReference=e.clone()}clearReference(){this._coreReference.delete(),this._coreReference=null}}class PlanObjectViewModel extends KernelViewModel{constructor(e){super(e);const t=convertToTHREE(e.getCenter());let n=convertToThreeDimensions(e.size);this._container=new THREE.Object3D,this._container.name=e.getObjectType(),this._container.position.copy(t),this._container.rotateY(e.rotation),this._boundingBox=this._generateBoundingBox(n,e.customColor),fadeIn(this._boundingBox),this._container.add(this._boundingBox)}update(){this._container.position.copy(convertToTHREE(this.getPlanObject().getCenter()))}getPosition(){return this._container.position}getRotation(){return this._container.rotation.y}getBounds(){let e=new THREE.Box3;return e.setFromObject(this._container),e}getBoundingBox(){return this._boundingBox}getPlanObject(){return this._coreReference}getObject(){return this._object}getContainer(){return this._container}getId(){return this.getPlanObject().getId()}clear(){dispose(this._container),this._selectionMesh&&dispose(this._selectionMesh)}hidePreviewBox(){this._container&&this._boundingBox&&(this._boundingBox.material=getBoundingBoxMaterial())}_generateBoundingBox(e,t){e.addScalar(.01);let n=new THREE.BoxGeometry(e.x,e.y,e.z),i=new THREE.Color(PREVIEW_MATERIAL_COLOR);t>0&&(i=getColorFromInt(t));let a=new THREE.MeshStandardMaterial({color:i,opacity:PREVIEW_MATERIAL_OPACITY,transparent:!0}),s=new THREE.Mesh(n,a);return s.name="bounding box",s.position.y=e.y/2,s.castShadow=!1,s.receiveShadow=!1,s}select(){if(!this._selectionMesh){let e=new THREE.MeshStandardMaterial({color:getColors().PRIMARY,opacity:PREVIEW_MATERIAL_OPACITY,transparent:!0});const t=convertToTHREE(this.getPlanObject().getCenter());let n=convertToThreeDimensions(this.getPlanObject().size);this._selectionMesh=new THREE.Mesh(getSelectionGeometry(t,n),e)}this._container.add(this._selectionMesh)}deselect(){this._selectionMesh&&this._container.remove(this._selectionMesh)}}const LEGACY_ASSET_URL_REG_EX=new RegExp(/\/3d\/[0-9]+\//);class StaticPlanObjectViewModel extends PlanObjectViewModel{constructor(e){super(e),this._container.name="Static "+this._container.name}setRapiItem(e){return this._addStaticItem(e)}_addStaticItem(e){let t=this.getPlanObject();this._glbUrl=e.threeDimensionalAsset||this._getGLBUrl(e.threeDimensionalAssetWeb);let n=convertToThreeDimensions(t.size);return t.flipX&&(n.x*=-1),t.flipY&&(n.z*=-1),new Promise(i=>{this._staticItemLoader.loadGLB(this._glbUrl,void 0,void 0,n,t.customColor,e.colorable).then(t=>{this._object=t,this._object.name=e.label,checkGLB(t,this._glbUrl),fadeIn(t),this._container.add(this._object),this.hidePreviewBox(),i()})})}_getGLBUrl(e){return e.match(LEGACY_ASSET_URL_REG_EX)?e.replace(LEGACY_ASSET_URL_REG_EX,"/3d/glb/").replace(".flash.u3d",".glb"):e}getGLBUrl(){return this._glbUrl}}__decorate([inject],StaticPlanObjectViewModel.prototype,"_staticItemLoader",void 0);class ConfiguratorPlanObjectViewModel extends PlanObjectViewModel{constructor(e){super(e),this._container.name="Configurable "+this._container.name}addRootComponent(e){this._object=e,this._container.add(this._object)}getConfigurationRuntimeId(){return this.getPlanObject().getConfigurationRuntimeId()}}class PlannerLightSettingArealight extends LightSetting{constructor(e,t){super(e,t),this._center=new THREE.Vector3(0,0,0),this._params={ambientLight:{color:"#ffffff"},areaLight:{position:{x:-1,y:12,z:-1},intensity:250,width:30,height:30,color:"#ffffff"}},this._ambientLight=new THREE.AmbientLight(new THREE.Color(this._params.ambientLight.color),.8),this._ambientLight.layers.set(1),this._areaLight=new THREE.RectAreaLight(11189230,void 0,this._params.areaLight.width,this._params.areaLight.height),this._areaLight=new THREE.RectAreaLight(new THREE.Color(this._params.areaLight.color),void 0,this._params.areaLight.width,this._params.areaLight.height),this._areaLight.castShadow=!0,this._areaLight.matrixAutoUpdate=!0,this._areaLight.intensity=this._params.areaLight.intensity/(this._areaLight.width*this._areaLight.height),this._areaLight.position.set(this._params.areaLight.position.x,this._params.areaLight.position.y,this._params.areaLight.position.z),this._areaLight.lookAt(new THREE.Vector3(0,0,0)),this._areaLight.visible=!0,this._areaLight.layers.set(1),this.addToScene()}updateSunPosition(e,t){}addToScene(){this._scene.add(this._areaLight),this._scene.add(this._ambientLight)}removeFromScene(){this._scene.remove(this._areaLight),this._scene.remove(this._ambientLight)}reload(){this.removeFromScene(),this.addToScene()}needsBounds(){return!0}updateBounds(e){this._center.copy(e.getCenter(new THREE.Vector3)),this._areaLight.position.copy(new THREE.Vector3(this._params.areaLight.position.x,this._params.areaLight.position.y,this._params.areaLight.position.z).add(this._center)),this._areaLight.lookAt(this._center)}showGUI(){let e=getGUI();if(this._areaLight){let t=e.addFolder("Area Light");t.add(this._areaLight,"visible"),t.add(this._params.areaLight,"intensity").min(100).max(2e3).step(1).onChange(e=>this._areaLight.intensity=e/(this._areaLight.width*this._areaLight.height)),t.add(this._params.areaLight,"width").min(1).max(30).step(1).onChange(e=>{this._areaLight.width=e,this._areaLight.intensity=this._areaLight.intensity/(this._areaLight.width*this._areaLight.height)}),t.add(this._params.areaLight,"height").min(1).max(30).step(1).onChange(e=>{this._areaLight.height=e,this._areaLight.intensity=this._areaLight.intensity/(this._areaLight.width*this._areaLight.height)}),t.add(this._areaLight,"castShadow"),t.addColor(this._params.areaLight,"color").onChange(e=>this._areaLight.color=new THREE.Color(e)),t.add(this._areaLight.position,"x").min(-30).max(50).step(.1).onChange(()=>this._areaLight.lookAt(this._center)),t.add(this._areaLight.position,"y").min(-30).max(50).step(.1).onChange(()=>this._areaLight.lookAt(this._center)),t.add(this._areaLight.position,"z").min(-30).max(50).step(.1).onChange(()=>this._areaLight.lookAt(this._center))}if(this._ambientLight){let t=e.addFolder("Ambient Light");t.add(this._ambientLight,"visible"),t.add(this._ambientLight,"intensity").min(0).max(5).step(.1),t.addColor(this._params.ambientLight,"color").onChange(e=>this._ambientLight.color=new THREE.Color(e))}}}const PLAN_STORE="rml_plans";class PlannerSceneManager extends SceneManager{constructor(e,t,n,i){super(e,t,CANVAS_ID.HSP,i),this._roomlePlannerCallback=n,this._plannerMeshGenerator.maxAnisotrophy=this._renderer.capabilities.getMaxAnisotropy(),this._wallGroup=new THREE.Group,this._ceilingGroup=new THREE.Group,this._plannerSceneEventHandler=new PlannerSceneEventHandler(this._scene,this._cameraControl.getCamera(),this._getInputManager()),this._plannerSceneEventHandler.addEventListener(0,({planObjectViewModel:e})=>{e instanceof StaticPlanObjectViewModel&&window.__RML__ENV__.initData.debug&&e.getGLBUrl(),e instanceof ConfiguratorPlanObjectViewModel&&window.__RML__ENV__.initData.enableHSC&&this._switchToHSC(e.getConfigurationRuntimeId()),this._highlight(e)},this),this._plannerSceneEventHandler.addEventListener(1,({planObjectViewModel:e})=>{this._highlight(null)},this),this._plannerSceneEventHandler.addEventListener(4,({planObjectViewModel:e})=>{this._cameraControl.lock(),this._requestRender()},this),this._plannerSceneEventHandler.addEventListener(5,({planObjectViewModel:e})=>{this._cameraControl.unlock(),this._requestRender(!0)},this),this._plannerKernelAccess.addPlannerListener(this),this._plannerMeshGenerator.setMaterialLoadedListener(()=>{this._planViewModel.tryToMergeComponents(),this._requestRender()}),window.onbeforeunload=this.clearScene.bind(this)}_setupScene(e,t){super._setupScene(e,t),window.__RML__ENV__.initData.enableHSC?this._lightSetting=new PlannerLightSetting(this._scene):this._lightSetting=new PlannerLightSettingArealight(this._scene),this._addSky()}zoomToPlanObject(e){if(e instanceof ConfiguratorPlanObjectViewModel)if(this._cameraControl instanceof CameraControl3D){this._cameraControl.saveState(!0);let t=e.getBounds(),n=t.getSize(new THREE.Vector3),i=this._getYRotationOfObject(e.getContainer()),a=new THREE.Euler(0,i,0),s=t.getCenter(new THREE.Vector3);this._cameraControl.zoomTo(n,this._renderer.getSize().width,this._renderer.getSize().height,a.y,toRadiant(15),s).then(()=>this._switchToHSC(e.getConfigurationRuntimeId()))}else this._switchToHSC(e.getConfigurationRuntimeId())}onBeforeRender(){this._cameraControl instanceof CameraControl3D&&this._plannerMeshGenerator.wallMeshes.forEach(e=>setWallTransparencyBasedOnCamera(this._cameraControl.getCamera(),e.material))}_getInputManager(){return this._plannerInputManager}createCameraControl(e){this.setMode(e)}resetCamera(){this._cameraControl.hasSavedState()?this.resetCameraToState():this.resetCameraPositionToStart()}resetCameraToState(){this._cameraControl.resetToState()}resetCameraPositionToStart(){this._requestRender()}_getYRotationOfObject(e){let t=e.getWorldDirection(new THREE.Vector3).clone();t.y=0,t.lengthSq()<.01&&((t=new THREE.Vector3(0,1,0)).applyQuaternion(e.quaternion),t.y=0),t.normalize();let n=Math.asin(t.x);return t.z<0&&(n=Math.PI-n),n<0&&(n+=2*Math.PI),n}loadStaticPlanObjects(){let e=new Map;this._planViewModel.getStaticPlanObjectViewModels().forEach(t=>{let n=t.getPlanObject();e.has(n.getCatalogItemId())?e.get(n.getCatalogItemId()).push(t):e.set(n.getCatalogItemId(),[t])}),this._rapiAccess.getItems(Array.from(e.keys())).then(t=>{let n=[];t.forEach(t=>{this._plannerKernelAccess.catalogItemLoaded(t),e.get(t.id).forEach(e=>{n.push(new Promise((n,i)=>{e.setRapiItem(t).then(()=>{this._requestRender(),n()},i)}))})}),Promise.all(n).then(()=>this._staticItemsLoaded())})}_staticItemsLoaded(){this._requestRender(!0),this._roomlePlannerUiCallback.onItemsLoaded()}preload(e){this._planId=e;let t=this._localStorageHelper.getItem(this._planId,PLAN_STORE);t&&this._loadGLTF(t).then(e=>{this._preloadScene=e,this._preloadScene&&this._scene.add(this._preloadScene),this._requestRender()})}planXMLLoaded(e){this._plannerKernelAccess.planModelViewHelper.requestPlanMesh3d(e,!0);let t=e.getBounds();this._bounds=kernelBoxToThreeBox(t);let{x:n,y:i}=this._domHelper.getClientDimensions();this._cameraControl instanceof CameraControl3D&&this._cameraControl.updateAndReset(this._bounds.getSize(new THREE.Vector3),n,i,this._bounds.getCenter(new THREE.Vector3),-15,70,5,!1),this._cameraControl instanceof CameraControl2D&&this._cameraControl.updateToBounds(this._bounds.getSize(new THREE.Vector3),this._bounds.getCenter(new THREE.Vector3)),this._environment&&this._environment.needsBounds()&&this._environment.updateBounds(this._bounds.getSize(new THREE.Vector3)),this.loadStaticPlanObjects()}planCompletelyLoaded(e){if(this._pixotron){const t=kernelBoxToThreeBox(e.getBounds());this._pixotron.getShadowPass().setShadowRecieverBBox(t)}this._requestRender(),Benchmark.end("loadingTime"),this._planId&&this.exportGLB([...this._wallGroup.children,...this._ceilingGroup.children],this._planId),this._roomlePlannerUiCallback.onCompletelyLoaded()}handlerSwitchedPlans(e){this._planViewModel=e,this._planViewModel.setPlannerSceneEventHandler(this._plannerSceneEventHandler),this._planViewModel.setGeometriesMergedListener(()=>{this._requestRender()}),this._plannerSceneEventHandler.setPlanViewModel(this._planViewModel),this.clearScene(),this._addSky(),this.resetCamera(),this._wallGroup=new THREE.Group,this._ceilingGroup=new THREE.Group,this._setCeiling();let t=new THREE.PlaneGeometry(1e3,1e3);t.rotateX(-Math.PI/2);let n=new THREE.MeshStandardMaterial({color:"#f0f0f0",roughness:1,metalness:0}),i=new THREE.Mesh(t,n);i.name="Ground",i.position.y=-.01,i.receiveShadow=!0,this._scene.add(i)}beginPlanConstruction(e){}addPlanMesh(e,t,n,i,a,s,r){const o=this._plannerMeshGenerator.generateMesh(null,t,n,i,a,s,r);7===r.value?this._ceilingGroup.add(o):(this._wallGroup.add(o),this._plannerSceneEventHandler.addWallHandlers(o))}endPlanConstruction(e){this._renderLoopFunction=(()=>{this._scene.add(this._wallGroup),this._scene.add(this._ceilingGroup),this._lightSetting.needsBounds()&&this._lightSetting.updateBounds(this._getConstructionBounds()),this._scene.remove(this._preloadScene)})}addPlanObjectToScene(e){fadeIn(e),this._scene.add(e)}planElementChanged(e,t){this._requestRender(!0)}exportGLB(e,t){this._scriptLoader.fetch("static/three/lib/exporters/GLTFExporter.js",{id:"gltf-exporter"}).then(()=>{let n=new THREE.GLTFExporter;e||(e=[],this._scene.children.forEach(t=>{this._isPartOfScene(t)&&e.push(t)})),n.parse(e,e=>{let n=t||"test";this._localStorageHelper.addItem(n,JSON.stringify(e),PLAN_STORE)},{binary:!1,embedImages:!0,forceIndices:!0})})}importGLB(e){this._loadGLB(e).then(e=>this._scene.add(e))}clearScene(){this._renderer.renderLists.dispose(),this._renderer.dispose(),this._plannerMeshGenerator.clear(),this._planViewModel.sceneCleared(),super.clearScene()}_addSky(){this._sky=new THREE.Sky,this._sky.name="Sky",this._sky.scale.setScalar(45e4),this._scene.add(this._sky),this._sky.material.uniforms.turbidity.value=10,this._sky.material.uniforms.rayleigh.value=2,this._sky.material.uniforms.luminance.value=1,this._sky.material.uniforms.mieCoefficient.value=.005,this._sky.material.uniforms.mieDirectionalG.value=.8;let e=new THREE.Mesh(new THREE.SphereBufferGeometry(2e4,16,8),new THREE.MeshBasicMaterial({color:16777215}));e.name="Sunsphere",e.position.y=-7e5,e.visible=!1,this._scene.add(e);let t=-.2*Math.PI,n=2*Math.PI*-.25;e.position.x=4e5*Math.cos(n),e.position.y=4e5*Math.sin(n)*Math.sin(t),e.position.z=4e5*Math.sin(n)*Math.cos(t),e.visible=!0,this._sky.material.uniforms.sunPosition.value.copy(e.position),this._lightSetting instanceof PlannerLightSetting&&this._lightSetting.updateSunPosition(.3,.25)}switchTo2D(){this._cameraControl instanceof CameraControl2D||(this._requestRender(),this._changeCameraControl(new CameraControl2D(this._creator_,this._getInputManager())),this._bounds&&this._cameraControl.updateToBounds(this._bounds.getSize(new THREE.Vector3),this._bounds.getCenter(new THREE.Vector3)),this._addCameraControlListener(),this._pixotron&&this.enableHD(),this._setCeiling(),this._roomlePlannerUiCallback.onCameraChanged("2D"))}switchTo3D(){if(this._cameraControl instanceof CameraControl3D)return;this._changeCameraControl(new CameraControl3D(this._creator_,this._getInputManager(),new THREE.Vector3(0,10,0)));let{x:e,y:t}=this._domHelper.getClientDimensions();this._bounds&&this._cameraControl.updateAndReset(this._bounds.getSize(new THREE.Vector3),e,t,this._bounds.getCenter(new THREE.Vector3),-15,70,5,!1),this._addCameraControlListener(),this._pixotron&&this.enableHD(),this._setCeiling(),this._roomlePlannerUiCallback.onCameraChanged("3D")}_setCeiling(){this._ceilingGroup||(this._ceilingGroup=new THREE.Group),this._cameraControl instanceof CameraControlFirstPerson?this._ceilingGroup.visible=!0:this._ceilingGroup.visible=!1}cameraControlChanged(){super.cameraControlChanged(),this._plannerSceneEventHandler&&this._plannerSceneEventHandler.setCamera(this._cameraControl.getCamera())}sceneChanged(){this._plannerSceneEventHandler&&this._plannerSceneEventHandler.setScene(this._scene)}_switchToHSC(e){this._roomlePlannerCallback.switchToHsc(e)}closeHSC(){this._requestRender(),this._cameraControl instanceof CameraControl3D&&this._cameraControl.resetToState()}switchToFirstPerson(){if(this._cameraControl instanceof CameraControlFirstPerson)return;this._plannerMeshGenerator.wallMeshes.forEach(e=>setWallTransparency(e.material,!1,!1)),this._requestRender();let e=new THREE.Vector3(0,0,0);this._wallGroup&&(e=this._getConstructionBounds().getCenter(new THREE.Vector3)),this._cameraControl&&this._cameraControl.cleanUp(),this._changeCameraControl(new CameraControlFirstPerson(this._creator_,this._getInputManager(),e)),this._addCameraControlListener(),this._pixotron&&this.enableHD(),this._setCeiling(),this._roomlePlannerUiCallback.onCameraChanged("FP")}_getConstructionBounds(){let e=new THREE.Box3;return e.setFromObject(this._wallGroup),e}_onKeyDown(e){super._onKeyDown(e),e.key&&"1"===e.key&&(this.switchTo2D(),e.preventDefault()),e.key&&"2"===e.key&&(this.switchTo3D(),e.preventDefault()),e.key&&"3"===e.key&&(this.switchToFirstPerson(),e.preventDefault()),!e.key||"Meta"!==e.key&&"Control"!==e.key||(this._plannerSceneEventHandler.setSelectionMode("multiselect"),e.preventDefault())}_onKeyUp(e){super._onKeyDown(e),!e.key||"Meta"!==e.key&&"Control"!==e.key||(this._plannerSceneEventHandler.setSelectionMode("standard"),e.preventDefault())}setMode(e){switch(e){case"2D":this.switchTo2D();break;case"3D":this.switchTo3D();break;case"FP":this.switchToFirstPerson()}}_highlight(e){let t=[];this._outlinePass&&this._outlinePass.selectedObjects.forEach(e=>{e.traverse(e=>{e.visible=!0})}),e&&e.getObject()&&e.getObject().children&&t.push(...e.getObject().children),this._plannerSceneEventHandler.getSelectedIds().forEach(e=>{const n=this._planViewModel.getPlanObjectForId(e);n&&n.getObject()&&n.getObject().children&&t.push(...n.getObject().children)}),this._pixotron.getHighLightPass()&&!this._pixotron.getHighLightPass().set&&(this._outlinePass=this._pixotron.getHighLightPass(),this._pixotron.getHighLightPass().visibleEdgeColor=new THREE.Color(getColors().SELECTION),this._pixotron.getHighLightPass().hiddenEdgeColor=new THREE.Color(getColors().SELECTION),this._pixotron.getHighLightPass().edgeStrength=3,this._pixotron.getHighLightPass().edgeThickness=1,this._pixotron.getHighLightPass().edgeGlow=0,this._pixotron.getHighLightPass().set=!0),this._pixotron.highlightObjects(t)}destroy(){super.destroy(),this._plannerMeshGenerator.removeMaterialLoadedListener(),this._planViewModel.removeGeometriesMergedListener()}getPixotronParams(){return{saoparams:{intensity:.25,occlusionWorldRadius:.4,smoothTransition:!0,samplesPerFrame:4,bias:.016,numSamples:200,accumulative:!0},shadowparams:{shadowMapResolution:1024,shadowRadius:3,shadowQuality:1,smoothTransition:!0,enableAccumulation:!0,shadowBiasMultiplier:.6,nearPlane:.01,farPlane:50,fov:110,side:THREE.FrontSide,numSamples:100},groundShadow:{enable:!1,smoothTransition:!0,numSamples:1e3,numSamplesPerFrame:2,onComplete:this._addGroundShadows.bind(this)}}}planObjectConfigurationLoaded(e,t,n){if(e&&e.extRef&&t&&t.extRef){let e=t.extRef.jsObject.getPlanObject().getConfigurationRuntimeId();e>0&&this._planViewModel.constructComponents(e)}}}__decorate([inject],PlannerSceneManager.prototype,"_plannerKernelAccess",void 0),__decorate([inject],PlannerSceneManager.prototype,"_rapiAccess",void 0),__decorate([inject],PlannerSceneManager.prototype,"_plannerMeshGenerator",void 0),__decorate([inject],PlannerSceneManager.prototype,"_plannerInputManager",void 0),__decorate([inject],PlannerSceneManager.prototype,"_roomlePlannerUiCallback",void 0),__decorate([inject],PlannerSceneManager.prototype,"_localStorageHelper",void 0);const OFFSET={left:0,top:1,right:1,bottom:0};class RoomlePlanner{constructor(e){this._hscInstance=null,this._glbInstance=null,this._creator_=e,this._kernelAccessCallback.addListener(this),this._backstack.init([CANVAS_ID.HSP],this)}init(e,t,n){return Benchmark.start("loadingTime"),this._domHelper.setDomElement(e),this._plannerSceneManager?(this._lifeCycleManager.resume(),Promise.resolve()):(this._preloadPlanId=t,this.setOverrides(n),new Promise(this._initPromiseCallback.bind(this)))}loadPlanXml(e,t){return this.setOverrides(t),new Promise(t=>{this._plan=this._planInteractionHandler.loadPlanXML(e),this._plannerSceneManager.planXMLLoaded(this._plan),this._roomlePlannerUiCallback.onTotalFloorAreaChanged(this._planInteractionHandler.getPlan().getTotalFloorArea()),this._backstack.bringIntoForeground(CANVAS_ID.HSP),t()})}loadPlan(e,t){return this.setOverrides(t),new Promise((t,n)=>{this._rapiAccess.getPlan(e).then(e=>{this._plan=this._planInteractionHandler.loadPlanXML(e.planObjects),this._plannerSceneManager.planXMLLoaded(this._plan),this._roomlePlannerUiCallback.onTotalFloorAreaChanged(this._planInteractionHandler.getPlan().getTotalFloorArea()),this._backstack.bringIntoForeground(CANVAS_ID.HSP),t()},n)})}setOverrides(e){if(!e)return;const t=Object.assign(window.__RML__ENV__.initData,e);window.__RML__ENV__.initData=t,t.overrideTenant&&this._rapiAccess.overrideTenant(t.overrideTenant),t.overrideCountry&&this._rapiAccess.overrideCountry(t.overrideCountry),t.overrideRapi&&this._rapiAccess.overrideRapi(t.overrideRapi),t.customApiUrl&&this._rapiAccess.setCustomApiUrl(t.customApiUrl),e.alwaysUseCache&&this._dataSyncer.setAlwaysUseCache(e.alwaysUseCache),this._overrides=t}switch2D(){this._plannerSceneManager.switchTo2D()}switch3D(){this._plannerSceneManager.switchTo3D()}switchToFirstPerson(){this._plannerSceneManager.switchToFirstPerson()}exportGLB(){this._plannerSceneManager.exportGLB()}importGLB(e){this._plannerSceneManager.importGLB(e)}_initPromiseCallback(e,t){this._threeLoader.fetch().then(()=>{let t=this._scriptLoader.fetch("static/three/lib/loaders/GLTFLoader.js",{id:"gltf-loader"}),n=this._scriptLoader.fetch("static/three/lib/loaders/draco/DRACOLoader.js",{id:"draco-loader"}),i=this._scriptLoader.fetch("static/three/Tween.js",{id:"tween-js"}),a=this._scriptLoader.fetch("static/three/lib/objects/Sky.js",{id:"sky-js"});Promise.all([t,n,i,a]).then(()=>{this._kernelReadyCallback=e;const{mode:t}=window.__RML__ENV__.initData;this._plannerSceneManager||(this._plannerSceneManager=new PlannerSceneManager(this._creator_,OFFSET,this,t));const{stats:n}=window.__RML__ENV__.initData;this._preloadPlanId&&this._plannerSceneManager.preload(this._preloadPlanId),n?this.showStats():this.enableHD(),this._planInteractionHandler&&this._kernelReadyCallback()})})}enableHD(){return new Promise((e,t)=>{const n=()=>{this._plannerSceneManager.enableHD(),e()};Promise.all([this._threeLoader.fetch(),this._scriptLoader.fetch("static/three/lib/shaders/CopyShader.js",{id:"copy-shader-js"}),this._scriptLoader.fetch("static/three/lib/postprocessing/EffectComposer.js",{id:"effect-composer-js"}),this._scriptLoader.fetch("static/three/lib/lights/RectAreaLightUniformsLib.js",{id:"rect-area-light-uniforms-lib-js"}),this._scriptLoader.fetch("static/three/lib/postprocessing/RenderPass.js",{id:"render-pass-js"}),this._scriptLoader.fetch("static/three/lib/postprocessing/ShaderPass.js",{id:"shader-pass-js"}),this._scriptLoader.fetch("static/three/lib/shaders/LuminosityHighPassShader.js",{id:"luminosity-high-pass-shader-js"}),this._scriptLoader.fetch("static/three/lib/postprocessing/UnrealBloomPass.js",{id:"unreal-bloom-pass-js"}),this._scriptLoader.fetch("static/three/lib/postprocessing/OutlinePass.js",{id:"outline-pass-js"})]).then(()=>{this._scriptLoader.fetch("static/three/pi.min.js",{id:"pi-js"}).then(n,t)},t)})}isReady(){this._planInteractionHandler=this._plannerKernelAccess.planInteractionHandler,this._kernelReadyCallback&&this._kernelReadyCallback()}showBenchmarks(){Benchmark.showBenchmarks()}switchToHsc(e){return window.__RML__ENV__.initData.__patch_shadows__=!0,this._singlePromiseFactory.create(3,"startHSC",t=>{if(this._hscInstance)return this._hscInstance.resume(),t();import("./chunk-a0210dd7.js").then(({Configurator:n})=>{const i=new n(this._creator_);i.boot({kernelInstance:this._planInteractionHandler.getConfiguratorKernel(),kernelContainer:this._plannerKernelAccess.kernelContainer,planObjectId:e}),i.getApi().setOverrides(this._overrides),i.getApi().init(this._domHelper.element).then(()=>{this._hscInstance=i,t()})})}).then(()=>{this._hscInstance.getApi().syncPlanObjectToView(-1,e),this._backstack.bringIntoForeground(CANVAS_ID.HSC),this._roomlePlannerUiCallback.onSwitchToHSCFinished(this._hscInstance)})}switchToGLB(e){return this._singlePromiseFactory.create(4,"startGLB",e=>{if(this._glbInstance)return e();import("./chunk-08fd3515.js").then(t=>{const n=new t.GlbViewer;n.boot(),window.RoomleGLBViewer.init(this._domHelper.element).then(()=>{this._glbInstance=n,e()})})}).then(()=>{this._glbInstance.getApi().loadGLB(e),this._backstack.bringIntoForeground(CANVAS_ID.GLB)})}switchToPlanner(e){e&&this.loadPlan(e),this._backstack.bringIntoForeground(CANVAS_ID.HSP)}updateSize(){this._plannerSceneManager.updateCamera()}update(){this.updateSize(),this._glbInstance&&this._glbInstance.getApi().updateSize(),this._hscInstance&&this._hscInstance.getApi().updateSize()}get callbacks(){return this._roomlePlannerUiCallback}set callbacks(e){this._roomlePlannerUiCallback=e}showStats(){this._plannerSceneManager.showStats()}onBackStackChanged(e){this._roomlePlannerUiCallback.onBackStackChanged(e)}onCloseHSC(){this._plannerSceneManager.closeHSC(),this._hscInstance&&this._hscInstance.getApi().pauseKernelCallbacks()}back(){this._backstack.back()}backTo(e){this._backstack.backTo(e)}getConfigurator(){return this._hscInstance}getCurrentSkin(){return this._rapiAccess.getCurrentSkin()}getRuntimeComponentIdOfRootComponent(e){return e?this._plannerKernelAccess.planInteractionHandler?this._plannerKernelAccess.planInteractionHandler.getConfiguratorKernel().getRootPlanComponentIdFromObjectId(e):(console.warn("Can not retrieve runtime id without planInteractionHandler"),0):(console.warn("Can not retrieve runtime id without planObjectId"),0)}resumeTest(e){this._domHelper.setDomElement(e),this._lifeCycleManager.resume()}pauseTest(){this._lifeCycleManager.pause()}syncCatalog(e){return this._dataSyncer.syncCatalog(e)}loadError(e){}getPlanInteractionHandler(){return Promise.resolve(this._planInteractionHandler)}}__decorate([inject],RoomlePlanner.prototype,"_domHelper",void 0),__decorate([inject],RoomlePlanner.prototype,"_scriptLoader",void 0),__decorate([inject],RoomlePlanner.prototype,"_kernelAccessCallback",void 0),__decorate([inject],RoomlePlanner.prototype,"_plannerKernelAccess",void 0),__decorate([inject],RoomlePlanner.prototype,"_rapiAccess",void 0),__decorate([inject],RoomlePlanner.prototype,"_singlePromiseFactory",void 0),__decorate([inject],RoomlePlanner.prototype,"_roomlePlannerUiCallback",void 0),__decorate([inject],RoomlePlanner.prototype,"_lifeCycleManager",void 0),__decorate([inject],RoomlePlanner.prototype,"_backstack",void 0),__decorate([inject],RoomlePlanner.prototype,"_threeLoader",void 0),__decorate([inject],RoomlePlanner.prototype,"_dataSyncer",void 0);class PlanViewModel extends ConfiguratorViewModel{constructor(e){super(e),this._configurablePlanObjectViewModels=[],this._staticPlanObjectViewModels=[]}_getKernelAccess(){return RoomleDependencyInjection.lookup("planner-kernel-access",this._creator_)}setReference(e){this._coreReference=e.clone()}clearReference(){this._coreReference.delete(),this._coreReference=null,super.clearReference()}getCorePlan(){return this._coreReference}addPlanObjectViewModel(e){e.getPlanObject().hasConfiguration()?this._configurablePlanObjectViewModels.push(e):(this._staticPlanObjectViewModels.push(e),"door"!==e.getPlanObject().getObjectType()&&"window"!==e.getPlanObject().getObjectType()&&this._plannerSceneEventHandler.addPlanObjectHandlers(e))}_addRootComponent(e){let t=this._getPlanObjectViewModelForRuntimeId(e.parentObjectId);t&&t instanceof ConfiguratorPlanObjectViewModel&&(t.addRootComponent(e),this._plannerSceneEventHandler.addPlanObjectHandlers(t),t.hidePreviewBox())}_getPlanObjectViewModelForRuntimeId(e){let t=null;return this._configurablePlanObjectViewModels.forEach(n=>{e===n.getConfigurationRuntimeId()&&(t=n)}),t}getPlanObjectForId(e){let t=null;return this._configurablePlanObjectViewModels.forEach(n=>{e===n.getId()&&(t=n)}),this._staticPlanObjectViewModels.forEach(n=>{e===n.getId()&&(t=n)}),t}setPlannerSceneEventHandler(e){this._plannerSceneEventHandler=e}sceneCleared(){this._configurablePlanObjectViewModels.forEach(e=>{e.clear()}),this._staticPlanObjectViewModels.forEach(e=>{e.clear()}),super.sceneCleared()}getStaticPlanObjectViewModels(){return this._staticPlanObjectViewModels}getComponent(e){return this._components.get(e)}_generateMesh(e=null,t,n,i,a,s,r=!1){return this._plannerMeshGenerator.generateMesh(e,t,n,i,a,s)}_setMaterial(e,t,n){this._plannerMeshGenerator.setMaterial(e,t)}Editor3dComponentCreated(e,t,n,i,a){super.Editor3dComponentCreated(e,t,n,i,a),this._getKernelAccess()instanceof PlannerKernelAccess&&this.dockComponent(e,i,t,n)}}__decorate([inject],PlanViewModel.prototype,"_plannerMeshGenerator",void 0);class PlannerKernelAccess extends CommonKernelAccess{constructor(e){super(e,0),this._plannerKernelCallbackListener=new Set,Benchmark.addMeta("kernel_is_ready",{isWasm:this._useWASM}),this._scriptLoader.fetch(this._kernelPath,{id:"kernel"}).then(this._loadSuccess.bind(this),this._loadError.bind(this))}get kernelContainer(){return this._kernelContainer}_loadSuccess(){window.RoomleCore(this._kernelContainer)}_loadError(){console.error("kernel load error")}_createPlanInteractionHandler(){const e=this._kernelContainer;this._planInteractionHandler=new e.PlanInteractionHandler,this._planInteractionHandler.init(this._planInteractionHandler,1,300,!1,!0,e.DrawingType.CLICK_PER_CLICK),this._roomlePlannerUiCallback.onPlanInteractionHandlerCreated(this._planInteractionHandler)}addPlannerListener(e){this._plannerKernelCallbackListener.add(e)}removePlannerListener(e){this._plannerKernelCallbackListener.delete(e)}isReady(){super.isReady(),this.registerCallbacks(),this._roomlePlannerUiCallback.onPlannerKernelIsReady(this._kernelContainer),this._createPlanInteractionHandler();const e=this._planInteractionHandler.getConfiguratorKernel();this._kernelInstance=e,this._roomlePlannerUiCallback.onConfiguratorKernelIsReady(this._kernelContainer,e),Env.isProduction||(window.__RML__DEBUG__.ConfiguratorKernel=this._kernelInstance,window.__RML__DEBUG__.PlannerKernelContainer=this._kernelContainer),this._kernelAccessCallback.isReady()}get callbacks(){return this._roomlePlannerUiCallback}get planInteractionHandler(){return this._planInteractionHandler}get planModelViewHelper(){return this._kernelContainer.PlanModelViewHelper}catalogItemLoaded(e){let t=new this._kernelContainer.CatalogItem(e.id);t.size={x:e.width,y:e.depth,z:e.height},t.flipable=e.flipable,t.layer=e.layer,t.orderable=e.orderable,t.scaleable=e.scaleable,t.type=e.type?e.type:"",t.detailType=e.detailType?e.type:"",this._kernelContainer.catalogItemLoaded(t)}onLoadComponentError(e){}configurationLoaded(e,t,n,i,a){}componentDefinitionLoaded(e,t){}componentDefinitionLoadingError(e,t){}configurationLoadingError(){}componentConfigurationUpdated(e){}componentParameters(){}requestComponentDimensions(){}planObjectCreated(e,t){}planObjectUpdated(e){}planObjectConfigurationUpdated(e,t,n){}planObjectDeleted(){}requestPlanObjectDimensions(){}cleanUpCallbacks(){super.cleanUpCallbacks(),this._kernelContainer.unregisterPlannerCallback(this)}registerCallbacks(){super.registerCallbacks(),this._kernelContainer.registerPlannerCallback(this)}requestExternalMesh(e,t){return new Promise((n,i)=>{this._rapiAccess.getMesh(e,MESH_DEFAULT_FORMAT,t).then(a=>{fetch(new Request(this._dataSyncer.requestAsset(a.url,!0))).then(e=>e.arrayBuffer()).then(i=>{try{this._kernelInstance.addMeshCorto(e,t,new Uint8Array(i)),n()}catch(e){console.error(e),n()}}).catch(e=>{console.error(e),i(e)})},e=>{console.error(e),i(e)})})}Editor3dRootComponentCreated(e,t,n,i){this._configuratorKernelCallbackListener.forEach(a=>a.Editor3dComponentCreated(e,t,n,i,!0))}Editor3dPlanObjectConstructionDone(e){}Editor3dBeginGroup(){}Editor3dEndGroup(){}Editor3dSetMaterial(){}Editor3dLoadMaterial(){}Editor3dAddDockPreview(e,t){}Editor3dSetPreviewPointAssociations(e,t){}Editor3dSetPreviewLineAssociations(e,t){}Editor3dPreviewConstructionDone(e,t){}Editor3dTranslateBy(){}Editor3dRotateBy(){}Editor3dRotateAround(){}Editor3dAddCube(){}Editor3dAddCubeUVMod(){}Editor3dAddSphere(){}Editor3dAddSphereUVMod(){}Editor3dAddRectangle(){}Editor3dAddRectangleUVMod(){}Editor3dAddMesh(){}Editor3dAddMeshUVMod(){}Editor3dAddMeshUVCoord(){}Editor3dAddCylinder(){}Editor3dAddCylinderUVMod(){}Editor3dAddPrism(){}Editor3dAddPrismUVMod(){}Editor3dAddFittingPoint(){}Editor3dAddFittingLine(){}Editor3dSelectObject(){}Editor3dCopy(){}Editor3dUpdatePlanObjectPosition(){}Editor3dUpdatePlanObjectRotation(){}Editor3dUpdatePlanObjectTransform(){}Editor3dUpdatePlanComponentPosition(){}Editor3dUpdatePlanComponentRotation(){}Editor3dUpdatePlanComponentTransform(){}planElementRemoved(e){this._decoupleReferences(e)}handlerSwitchedPlans(e,t){if(this._decoupleReferences(e),t){let e=new PlanViewModel(this._creator_);e.setReference(t),this._coupleReferences(e,t),this._plannerKernelCallbackListener.forEach(t=>t.handlerSwitchedPlans(e))}}planBoundsChanged(){}planCleared(){}planCompletelyLoaded(e){this._plannerKernelCallbackListener.forEach(t=>t.planCompletelyLoaded(e))}planElement3dMeshChanged(e,t){}planElementAdded(e,t){if(e&&e.extRef&&t.getType()===this._kernelContainer.PlanElementType.OBJECT){let n,i=t;i.hasConfiguration()?(n=new ConfiguratorPlanObjectViewModel(i),this._coupleReferences(n,i),e.extRef.jsObject.addPlanObjectViewModel(n)):(n=new StaticPlanObjectViewModel(i),this._coupleReferences(n,i),e.extRef.jsObject.addPlanObjectViewModel(n)),this._plannerKernelCallbackListener.forEach(e=>e.addPlanObjectToScene(n.getContainer()))}}planElementChanged(e,t){if(t.extRef){let n=t.extRef.jsObject;n.update(),this._plannerKernelCallbackListener.forEach(t=>t.planElementChanged(e,n))}}planHistoryStateChanged(){}planObjectConfigurationCreated(e,t){}planObjectConfigurationLoaded(e,t,n){e&&e.extRef&&t&&t.extRef&&t.extRef.jsObject.getPlanObject().getConfigurationRuntimeId()>0&&this._plannerKernelCallbackListener.forEach(i=>i.planObjectConfigurationLoaded(e,t,n))}requestCatalogItem(e){}startedDrawing(){}stoppedDrawing(){}updateMesh2d(){}beginConstruction(){}addMesh(){}endConstruction(){}beginPlanConstruction(e){this._plannerKernelCallbackListener.forEach(t=>t.beginPlanConstruction(e))}addPlanMesh(e,t,n,i,a,s,r){this._plannerKernelCallbackListener.forEach(o=>o.addPlanMesh(e,t,n,i,a,s,r))}endPlanConstruction(e){this._plannerKernelCallbackListener.forEach(t=>t.endPlanConstruction(e))}_coupleReferences(e,t){let n=new this._kernelContainer.EMSReference;n.jsObject=e,t.extRef=n}_decoupleReferences(e){e&&e.extRef&&(e.extRef.jsObject.clearReference(),e.extRef.jsObject=null,e.extRef.delete(),e.extRef=null)}}__decorate([inject],PlannerKernelAccess.prototype,"_kernelAccessCallback",void 0),__decorate([inject],PlannerKernelAccess.prototype,"_roomlePlannerUiCallback",void 0);class Backstack{constructor(e){this._initialStack=[],this._creator_=e,this._lifeCycleManager.addEventListener(this)}_setInitialStack(e){this._initialStack=[...e]}_setCallbacks(e){this._callbacks=e}_resetCanvasStack(){this._canvasStack=[...this._initialStack]}init(e,t){this._setInitialStack(e),this._resetCanvasStack(),this._setCallbacks(t)}bringIntoForeground(e){const t=this._domHelper.element.querySelectorAll("canvas");let n=!1;t.forEach(t=>{if(t.classList.contains(e)){if(!t.classList.contains("foreground")){const t=this.current();t&&e!==t&&(this._canvasStack.push(e),n=!0),t||(n=!0)}t.classList.remove("background"),t.classList.add("foreground")}else t.classList.remove("foreground"),t.classList.add("background")}),n&&this._callbacks.onBackStackChanged(this._canvasStack)}current(){return this._canvasStack[this._canvasStack.length-1]}back(){if(1===this._canvasStack.length)return;let e=this._canvasStack.pop();this.bringIntoForeground(this.current()),e===CANVAS_ID.HSC&&this._callbacks.onCloseHSC(),this._callbacks.onBackStackChanged(this._canvasStack)}backTo(e){if(1!==this._canvasStack.length&&this.current()!==e)for(;this._canvasStack.length>0;){let t=this.current();if(t===e){this.bringIntoForeground(t);break}t===CANVAS_ID.HSC&&this._callbacks.onCloseHSC(),this._canvasStack.pop(),this._callbacks.onBackStackChanged(this._canvasStack)}}pause(){this._resetCanvasStack()}resume(){}destroy(){}}__decorate([inject],Backstack.prototype,"_domHelper",void 0),__decorate([inject],Backstack.prototype,"_lifeCycleManager",void 0);class PlannerSelectionHandlerEvent{constructor(e){const{planObjectViewModel:t}=e;this.planObjectViewModel=t}}const INJECTABLES=[new DependencyInjectionAssignment("script-loader",ScriptLoader),new DependencyInjectionAssignment("dom-helper",DomHelper,1),new DependencyInjectionAssignment("planner-input-manager",class extends InputManager{_canDrag(e){return!0}},1),new DependencyInjectionAssignment("planner-kernel-access",PlannerKernelAccess),new DependencyInjectionAssignment("logger",Logger),new DependencyInjectionAssignment("planner-mesh-generator",class extends MeshGenerator{constructor(e){super(e),this._wallMeshes=[],this._standardFloorMaterial=new THREE.MeshStandardMaterial({color:"#e7d8c5",roughness:1,metalness:0,opacity:1}),this._standardWallMaterial=new THREE.MeshStandardMaterial({color:"#ffffff",roughness:1,metalness:0,opacity:1})}generateMesh(e=null,t,n,i,a,s,r,o=!1){let l;l=o?this._generateGeometry(e,n,i,a,s).clone():this._generateGeometry(e,n,i,a,s);const h=new THREE.Mesh(l,this._previewMaterial);return h.receiveShadow=!0,h.castShadow=!0,h.layers.set(3),!t&&r&&7!==r.value?(console.warn("material is undefined"),h):(this.setMaterial(h,t,r),this._checkWallMaterial(h,r),h)}setMaterial(e,t,n){n&&7===n.value?this.changeMaterialOfMesh(e,this._standardWallMaterial):t.materialId&&""!==t.materialId?this._assignMaterial(e,t.materialId).then(()=>{this._materialLoaded&&this._materialLoaded()}):t.catalogItemId&&""!==t.catalogItemId?this._assignItem(e,t.catalogItemId):t.rgbValue>0?this._assignRGB(e,t.rgbValue):t.length>0?this._assignMaterial(e,t).then(()=>{this._materialLoaded&&this._materialLoaded()}):t.uvScale?this.changeMaterialOfMesh(e,this._standardFloorMaterial):n&&1===n.value?this.changeMaterialOfMesh(e,this._standardWallMaterial):console.warn("material not supported",t)}set maxAnisotrophy(e){this._maxAnisotrophy=e}_checkWallMaterial(e,t){t&&1===t.value&&(e.renderOrder=5,this._wallMeshes.push(e))}clear(){super.clear(),this.clearWallMeshes()}clearWallMeshes(){this._wallMeshes.forEach(e=>{disposeMesh(e)}),this._wallMeshes=[]}get wallMeshes(){return this._wallMeshes}}),new DependencyInjectionAssignment("rapi-access",RapiAccess),new DependencyInjectionAssignment("roomle-planner-ui-callback",class extends UiCallback{constructor(e){super(e),this.onCompletelyLoaded=(()=>{}),this.onItemsLoaded=(()=>{}),this.onSwitchToHSCFinished=(e=>{}),this.onBackStackChanged=(e=>{}),this.onCameraChanged=(e=>{}),this.onTotalFloorAreaChanged=(e=>{}),this.onPlanInteractionHandlerCreated=(e=>{}),this.onPlannerKernelIsReady=(e=>void 0),this.onConfiguratorKernelIsReady=((e,t)=>void 0)}}),new DependencyInjectionAssignment("backstack",Backstack),new DependencyInjectionAssignment("planner-selection-handler",class extends EventDispatcher{constructor(){super(...arguments),this._selectionMode="standard",this._selectedPlanObjectViewModels=new Map}check(e){"standard"===this._selectionMode&&this._checkStandard(e),"multiselect"===this._selectionMode&&this._checkMulti(e)}cancelSelection(){0!==this._selectedPlanObjectViewModels.size&&this._selectedPlanObjectViewModels.forEach((e,t)=>{this._selectedPlanObjectViewModels.delete(t),this.dispatchEvent(1,new PlannerSelectionHandlerEvent({planObjectViewModel:e}))})}_checkStandard(e){if(this._selectedPlanObjectViewModels.has(e.getId()))return this._selectedPlanObjectViewModels.delete(e.getId()),void this.dispatchEvent(1,new PlannerSelectionHandlerEvent({planObjectViewModel:e}));this._selectedPlanObjectViewModels.size>0&&this._selectedPlanObjectViewModels.forEach((e,t)=>{this._selectedPlanObjectViewModels.delete(t),this.dispatchEvent(1,new PlannerSelectionHandlerEvent({planObjectViewModel:e}))}),this._selectedPlanObjectViewModels.set(e.getId(),e),this.dispatchEvent(0,new PlannerSelectionHandlerEvent({planObjectViewModel:e}))}_checkMulti(e){if(this._selectedPlanObjectViewModels.has(e.getId()))return this._selectedPlanObjectViewModels.delete(e.getId()),void this.dispatchEvent(1,new PlannerSelectionHandlerEvent({planObjectViewModel:e}));this._selectedPlanObjectViewModels.set(e.getId(),e),this.dispatchEvent(0,new PlannerSelectionHandlerEvent({planObjectViewModel:e}))}setSelectionMode(e){this._selectionMode=e}getSelectionMode(){return this._selectionMode}hasSelection(){return this._selectedPlanObjectViewModels.size>0}getSelectedIds(){let e=[];return this._selectedPlanObjectViewModels.forEach(t=>e.push(t.getId())),e}isSelected(e){return!!this._selectedPlanObjectViewModels.get(e)}})];class Planner extends Main{setupGlobals(){}setupDependencies(){RoomleDependencyInjection.setup(INJECTABLES),this._context=RoomleDependencyInjection.getContext("planner"),this.lookup("logger",this._context),this.lookup("planner-kernel-access",this._context)}cleanUpGlobals(){throw new Error("Method not implemented.")}cleanUpDependencies(){throw new Error("Method not implemented.")}bootFinished(){this._planner=new RoomlePlanner(this._context),window.RoomlePlanner||(window.RoomlePlanner=this._planner)}getApi(){return this._planner}}export{Planner};
//# sourceMappingURL=chunk-f5e55430.js.map
