System.register(["./chunk-f4346e3b.nomodule.js","./chunk-3e038205.nomodule.js","./chunk-1292a462.nomodule.js","./chunk-8bb0f8a3.nomodule.js","./chunk-57da2f35.nomodule.js","./chunk-1a325b27.nomodule.js"],function(e,t){var a,i,s,r,o,n,h,l,d,_,m,c,p,g,u,w,E,b,f,S,M,C,L;return{setters:[function(e){a=e.c},function(e){i=e.R,s=e.w,r=e.n,o=e.p,n=e.l,h=e.M,l=e.a8,d=e.A,_=e.C,m=e.E,c=e.B,p=e.h,g=e.a9,u=e.G,w=e.H,E=e.a},function(e){b=e.a,f=e.b},function(e){S=e.e,M=e.f},function(e){C=e.a},function(e){L=e.a}],execute:function(){class t extends i{constructor(e,t){super(e,t),this._params={ambientLight:{color:"#ffffff"},areaLight:{intensity:50,color:"#ffffff"},sideSpot:{color:"#ffffff",angle:50},backSpot:{color:"#ffffff",angle:50}},this._ambientLight=new THREE.AmbientLight(new THREE.Color(this._params.ambientLight.color),.5),this._ambientLight.layers.set(1),this._sideSpot=this._createSpotlight(new THREE.Vector3(2,3,1.5),new THREE.Vector3(0,.1,0),new THREE.Color(this._params.sideSpot.color),this._params.sideSpot.angle,.5,.5),this._backspot=this._createSpotlight(new THREE.Vector3(3,3,-3),new THREE.Vector3(0,.1,0),new THREE.Color(this._params.backSpot.color),this._params.backSpot.angle,1,.5),this._areaLight=new THREE.RectAreaLight(new THREE.Color(this._params.areaLight.color),void 0,1,1),this._areaLight.castShadow=!0,this._areaLight.matrixAutoUpdate=!0,this._areaLight.intensity=this._params.areaLight.intensity/(this._areaLight.width*this._areaLight.height),this._areaLight.position.set(-3,4,4),this._areaLight.lookAt(new THREE.Vector3(0,0,0)),this._areaLight.visible=!0,this._areaLight.layers.set(1),this.addToScene()}_createSpotlight(e,t,a,i,s,r){let o=new THREE.SpotLight(a,r);return o.angle=i*Math.PI/180,o.penumbra=s,o.position.copy(e),o.target.position.set(t.x,t.y,t.z),o.shadow.camera.near=.1,o.shadow.camera.far=10,o.visible=!0,o.castShadow=!1,o}addToScene(){this._scene.add(this._ambientLight),this._scene.add(this._areaLight),this._scene.add(this._sideSpot),this._scene.add(this._backspot)}removeFromScene(){this._scene.remove(this._ambientLight),this._scene.remove(this._areaLight),this._scene.remove(this._sideSpot),this._scene.remove(this._backspot)}reload(){this.removeFromScene(),this.addToScene()}showGUI(){let e=s();if(this._areaLight){let t=e.addFolder("Area Light");t.add(this._areaLight,"visible"),t.add(this._params.areaLight,"intensity").min(10).max(400).step(10).onChange(e=>{this._areaLight.intensity=e/(this._areaLight.width*this._areaLight.height)}),t.add(this._areaLight,"castShadow"),t.addColor(this._params.areaLight,"color").onChange(e=>{this._areaLight.color=new THREE.Color(e)}),t.add(this._areaLight.position,"x").min(-10).max(10).step(.1).onChange(()=>{this._areaLight.lookAt(new THREE.Vector3(0,0,0))}),t.add(this._areaLight.position,"y").min(-10).max(10).step(.1).onChange(()=>{this._areaLight.lookAt(new THREE.Vector3(0,0,0))}),t.add(this._areaLight.position,"z").min(-10).max(10).step(.1).onChange(()=>{this._areaLight.lookAt(new THREE.Vector3(0,0,0))})}if(this._ambientLight){let t=e.addFolder("Ambient Light");t.add(this._ambientLight,"visible"),t.add(this._ambientLight,"intensity").min(0).max(5).step(.1),t.addColor(this._params.ambientLight,"color").onChange(e=>{this._ambientLight.color=new THREE.Color(e)})}if(this._sideSpot){let t=e.addFolder("Side Spot");t.add(this._sideSpot,"visible"),t.add(this._sideSpot,"intensity").min(0).max(5).step(.1),t.add(this._sideSpot,"penumbra").min(0).max(1).step(.1),t.addColor(this._params.sideSpot,"color").onChange(e=>{this._sideSpot.color=new THREE.Color(e)}),t.add(this._params.sideSpot,"angle").min(10).max(180).step(1).onChange(e=>{this._sideSpot.angle=e*Math.PI/180}),t.add(this._sideSpot.position,"x").min(-10).max(10).step(.1).onChange(()=>{this._sideSpot.lookAt(new THREE.Vector3(0,0,0))}),t.add(this._sideSpot.position,"y").min(-10).max(10).step(.1).onChange(()=>{this._sideSpot.lookAt(new THREE.Vector3(0,0,0))}),t.add(this._sideSpot.position,"z").min(-10).max(10).step(.1).onChange(()=>{this._sideSpot.lookAt(new THREE.Vector3(0,0,0))})}if(this._backspot){let t=e.addFolder("Back Spot");t.add(this._backspot,"visible"),t.add(this._backspot,"intensity").min(0).max(5).step(.1),t.add(this._backspot,"penumbra").min(0).max(1).step(.1),t.addColor(this._params.backSpot,"color").onChange(e=>{this._backspot.color=new THREE.Color(e)}),t.add(this._params.backSpot,"angle").min(10).max(180).step(1).onChange(e=>{this._backspot.angle=e*Math.PI/180}),t.add(this._backspot.position,"x").min(-10).max(10).step(.1).onChange(()=>{this._backspot.lookAt(new THREE.Vector3(0,0,0))}),t.add(this._backspot.position,"y").min(-10).max(10).step(.1).onChange(()=>{this._backspot.lookAt(new THREE.Vector3(0,0,0))}),t.add(this._backspot.position,"z").min(-10).max(10).step(.1).onChange(()=>{this._backspot.lookAt(new THREE.Vector3(0,0,0))})}}}const y={x:1,y:1,z:1};class R extends L{constructor(e,a){super(e,a,r.RMV,"3D",!1),this._sceneParams={type:"cube"},this._materialParams={color:"#ffffff",metallic:.5,alpha:0,alphaCutoff:0,doubleSided:!1},this._lightSetting=new t(this._scene),this._initScene()}_initScene(){let e=new THREE.BoxGeometry(y.x,y.y,y.z,100,100,100);const t=new THREE.MeshPhysicalMaterial({color:a().PRIMARY});if(this._environmentLoader.getEnvironmentMap().then(e=>t.envMap=e),this._setMaterial(t),this._mesh=new THREE.Mesh(e,this._material),this._mesh.castShadow=!0,this._mesh.position.setY(y.y/2),this._scene.add(this._mesh),this._environment=new o(this._scene,null,new THREE.Color(16777215)),this._cameraControl instanceof n){const e=new THREE.Box3;e.setFromObject(this._mesh);let{x:t,y:a}=this._domHelper.getClientDimensions();this._cameraControl.updateAndReset(e.getSize(new THREE.Vector3),t,a,e.getCenter(new THREE.Vector3))}this.showGUI()}loadMaterialId(e){return new Promise(t=>{this._configuratorMeshGenerator.loadMaterial(e,100*y.x,100*y.y).then(e=>{this._setMaterial(e),this._mesh.material=this._material,this._updateGUI(),this._requestRender(!0),t()})})}loadMaterial(e){return new Promise(t=>{e.__rapi_path__||(e.__rapi_path__="materials"),this._setMaterial(h(e,this._environmentLoader)),this._mesh.material=this._material,this._configuratorMeshGenerator.loadTextures(e,this._material,100*y.x,100*y.y).then(()=>{this._updateGUI(),this._requestRender(!0)}),t()})}loadMaterialShading(e){return new Promise(t=>{let a={shading:e};this._setMaterial(h(a,this._environmentLoader)),this._mesh.material=this._material,this._updateGUI(),this._requestRender(!0),t()})}_setMaterial(e){this._material=e,this._materialParams.alpha=e.opacity,this._materialParams.alphaCutoff=e.alphaTest,this._materialParams.color="#"+e.color.getHexString(),this._materialParams.doubleSided=e.side===THREE.DoubleSide,this._materialParams.metallic=1===e.metalness?1:e.reflectivity}getMaterialShading(){return l(this._material)}createCameraControl(e){this._cameraControl=new n(this._creator_,this._getInputManager(),new THREE.Vector3(-1,1,1))}_getInputManager(){return this._inputManager}sceneChanged(){}getPixotronParams(){return{saoparams:{intensity:.25,occlusionWorldRadius:.6,smoothTransition:!0,samplesPerFrame:4,bias:.02,numSamples:200,accumulative:!0},shadowparams:{shadowMapResolution:1024,shadowRadius:1,shadowQuality:1,smoothTransition:!0,enableAccumulation:!0,shadowBiasMultiplier:.05,nearPlane:.01,farPlane:50,fov:40,numSamples:50,side:THREE.FrontSide},groundShadow:{enable:!1,smoothTransition:!0,numSamples:500,numSamplesPerFrame:4,onComplete:this._addGroundShadows.bind(this)}}}_guiLoaded(){this._updateGUI()}_updateGUI(){let e=s();this._guiGeometryFolder||(this._guiGeometryFolder=e.addFolder("Geometry"),this._guiGeometryFolder.add(this._sceneParams,"type",{Cube:"cube",Sphere:"sphere",PlaneVertical:"plane_v",PlaneHorizontal:"plane_h"}).onChange(e=>{this._setGeometry()})),this._material&&(this._guiMaterialFolder&&e.removeFolder(this._guiMaterialFolder),this._guiMaterialFolder=e.addFolder("Material"),this._guiMaterialFolder.addColor(this._materialParams,"color").onChange(e=>{this._material.color=new THREE.Color(e),this._shadingChanged()}),this._guiMaterialFolder.add(this._materialParams,"metallic").min(0).max(1).step(.01).onChange(e=>{this._material.metalness=1===e?1:.5,this._material.reflectivity=e||.5,this._shadingChanged()}),this._guiMaterialFolder.add(this._material,"roughness").min(0).max(1).step(.01).onChange(e=>{this._shadingChanged()}),this._guiMaterialFolder.add(this._materialParams,"alpha").min(0).max(1).step(.01).onChange(e=>{this._material.transparent=e<1,this._material.opacity=e,this._material.depthWrite=e>=1,this._shadingChanged()}),this._guiMaterialFolder.add(this._materialParams,"alphaCutoff").min(0).max(1).step(.01).onChange(e=>{this._material.alphaTest=e||0,this._shadingChanged()}),this._guiMaterialFolder.add(this._materialParams,"doubleSided").onChange(e=>{this._material.side=e?THREE.DoubleSide:THREE.FrontSide,this._shadingChanged()})),this._addGUIListener(e)}_shadingChanged(){this._roomleMaterialViewerUiCallback.onMaterialShadingChanged(l(this._material))}_setGeometry(){let e;"cube"===this._sceneParams.type&&(e=new THREE.BoxGeometry(y.x,y.y,y.z,100,100,100)),"sphere"===this._sceneParams.type&&(e=new THREE.SphereGeometry(.5,100,100)),"plane_h"===this._sceneParams.type&&(e=new THREE.PlaneGeometry(y.x,y.z)).rotateX(-Math.PI/2),"plane_v"===this._sceneParams.type&&(e=new THREE.PlaneGeometry(y.x,y.z)),this._mesh.geometry=e,this._requestRender(!0)}}b([f],R.prototype,"_inputManager",void 0),b([f],R.prototype,"_configuratorMeshGenerator",void 0),b([f],R.prototype,"_roomleMaterialViewerUiCallback",void 0);class T{constructor(e){this._creator_=e}init(e){return this._domHelper.setDomElement(e),this._sceneManager?(this._lifeCycleManager.resume(),Promise.resolve()):new Promise(this._initPromiseCallback.bind(this))}_initPromiseCallback(e,t){this._threeLoader.fetch().then(()=>{let t=this._scriptLoader.fetch("static/three/lib/loaders/GLTFLoader.js",{id:"gltf-loader"}),a=this._scriptLoader.fetch("static/three/Tween.js",{id:"tween-js"});Promise.all([t,a]).then(()=>{this._sceneManager=new R(this._creator_,{left:0,top:1,right:1,bottom:0}),this.enableHD(),e()})})}enableHD(){return new Promise((e,t)=>{const a=()=>{this._sceneManager.enableHD(),e()};Promise.all([this._scriptLoader.fetch("static/three/lib/postprocessing/EffectComposer.js",{id:"effect-composer-js"}),this._scriptLoader.fetch("static/three/lib/lights/RectAreaLightUniformsLib.js",{id:"rect-area-light-uniforms-lib-js"}),this._scriptLoader.fetch("static/three/lib/postprocessing/ShaderPass.js",{id:"shader-pass-js"}),this._scriptLoader.fetch("static/three/lib/postprocessing/RenderPass.js",{id:"render-pass-js"}),this._scriptLoader.fetch("static/three/lib/shaders/CopyShader.js",{id:"copy-shader-js"})]).then(()=>{this._scriptLoader.fetch("static/three/pi.min.js",{id:"pi-js"}).then(a,t)},t)})}get callbacks(){return this._roomleMaterialViewerUiCallback}set callbacks(e){this._roomleMaterialViewerUiCallback=e}loadMaterialShading(e){return this._sceneManager.loadMaterialShading(e)}loadMaterial(e){return this._sceneManager.loadMaterial(e)}loadMaterialId(e){return this._sceneManager.loadMaterialId(e)}getMaterialShading(){return this._sceneManager.getMaterialShading()}loadSceneSetting(e){return this._sceneManager.loadSceneSettings(e)}loadQualitySetting(e){this._sceneManager.loadQualitySetting(e)}setOverrides(e){if(!e)return;const t=Object.assign(window.__RML__ENV__.initData,e);window.__RML__ENV__.initData=t}updateSize(){this._sceneManager.updateCamera()}resumeTest(e){this._domHelper.setDomElement(e),this._lifeCycleManager.resume()}pauseTest(){this._lifeCycleManager.pause()}showGUI(){this._sceneManager.showGUI()}}b([f],T.prototype,"_domHelper",void 0),b([f],T.prototype,"_scriptLoader",void 0),b([f],T.prototype,"_lifeCycleManager",void 0),b([f],T.prototype,"_threeLoader",void 0),b([f],T.prototype,"_roomleMaterialViewerUiCallback",void 0);const H=[new d("script-loader",_),new d("dom-helper",m,1),new d("logger",c),new d("input-manager",p,1),new d("environment-loader",g),new d("configurator-mesh-generator",C),new d("rapi-access",M),new d("roomle-material-viewer-ui-callback",class extends S{constructor(e){super(e),this.onMaterialShadingChanged=(e=>void 0)}},1)];e("MaterialViewer",class extends u{setupGlobals(){}setupDependencies(){w.setup(H),this._context=w.getContext("glb-viewer"),this.lookup("logger",this._context)}cleanUpGlobals(){throw new Error("Method not implemented.")}cleanUpDependencies(){throw new Error("Method not implemented.")}constructor(){super(),E.start("loadingTime")}bootFinished(){this._viewer=new T(this._context),window.RoomleMaterialViewer||(window.RoomleMaterialViewer=this._viewer)}getApi(){return this._viewer}})}}});
//# sourceMappingURL=chunk-06905f8d.nomodule.js.map
